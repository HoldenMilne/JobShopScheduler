namespace V1_0.Java.JobShop;//:name=V1_0.Java.JobShop;

class Machine {
    1 -- * Job;

    String name;
    int id;
}

class Job {
    String name;
    int id;
    float timeToCompletion;
    float changeOverTime;
    int priority;
}

class Operator {
    * -- * Machine;
    1 -- 1 Floor; // For all intents and purposes

    String name;
    int id;
}

class Floor {
    1 -- * Machine;

    String name;
    int id;
}

class Shop {
    1 -- 1..* Floor;
}

namespace V1_0.Java.Scheduling;

class Schedule
{


}
association {
    1..* Schedule s <@>- 1..* Job j;
}

class ScheduleStream
{


}

class Scheduler
{


}

namespace V1_0.Java.Parsing;

class ScheduleStreamParser
{
    depend V1_0.Java.Scheduling.Schedule;
    depend V1_0.Java.Scheduling.ScheduleStream;
    depend java.util.stream.Stream;
    // non-static to allow for multiple threads/instances?
    public static Schedule ParseStream(Stream stream)
    {
        return null; // parse to a schedule??
    }

    public static Schedule ParseStream(ScheduleStream stream)
    {
        return null; // parse to a schedule??
    }
}
